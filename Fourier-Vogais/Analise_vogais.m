%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Proposta %% %%  a. implementar a série discreta%%  Xn = 1/N somatoria_{k=0}^{N-1} gk(k) exp(-j*n*k*2*pi/N)%%  b. visualizar graficamente%%  c. interpretar o resultado%%  d. comparar com tempo%%%%  Trabalho em Octave *.m%%%%  a. Analisar as cinco vogais: Xa, Xe, Xi, Xo, e Xu.%%  b. Os tempos de execução de cada vogal.%%  c. O que você observa de diferente em cada série de Fourier.%%  d. Você conseguiria analisar no tempo?%%  e. Como você transformaria o "for" em produto matricial como foi feito na teoria?%%  %%  Entrega 23/03 até 23:59 - individual%%%%  Reposição 07/04 e 14/04%%%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Sinal: calibração e sinal real%%%% trabalhar com um sinal amostrado%% %%% sinal artificial de referência - calibrar o Fourier nas mesmas condições%%%% criar um senoide artificial: amplitude - Ap, frequência - fo e fase - theta%% %%   sinal = Ap * cos (2 * pi * fo * t + theta)%%% configuração do sinal artificialfs      = 10;                       % frequência de amostragemAp      = 1;                        % amplitude do sinal artificialfo      = 1;                        % frequência do sinal artificial em Hztheta   = 0;                        % fase do sinal artificial em radianosTo      = 1/fo;                     % determino o período do meu sinalNp      = 50;                       % número de períodos em análiset       = linspace(0,Np*To,Np*fs);  % tempo total do sinalgk      = Ap*cos(2*pi*t+theta);     % sinal artificialgk      = gk + Ap*cos(1*pi*t+theta);    % adicionando o drobro da frequência%%% Visualizaçãofigure(1)stem(t,gk,'k-','linewidth',3)         % configura plot(x,y, cor azul e linha cheia)xlabel('Tempo em segundos')           % tempo em segundosylabel('Amplitude')                   % amplitude em voltstitle('Sinal g(k) amostrado')         % títulogrid%%% recuperar o sinal a partir de um arquivo - real% [gk,fs] = audioread ('a.wav');     % transformei um arquivo .wav em um vetor g(k)                                     % recuperei a taxa de amostragem - fs%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  3 - Pré - processamento%%%%%%  Xn = 1/N somatoria_{k=0}^{N-1} gk(k) exp(-j*n*k*2*pi/N)N       = length(gk);               % número de pontos do sinal em análiseTs      = 1/fs;                     % tempo de amostragemws      = 2*pi*fs;                  % frequência anngularduracao = N*Ts;                     % Duração do sinaltempo   = linspace(0,N*Ts,N);       % vetor tempo computacionalfmax    = fs/2;                     % frequência máxima de amostragemfrequencia = linspace(-fs/2,fs/2,N);% vetor de frequências de Fourierresolucao  = fs/N;                  % resoluÇào em frequência%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  4 - Fourier%%%%%%  Xn = 1/N somatoria_{k=0}^{N-1} gk(k) exp(-j*n*k*2*pi/N)%%% usando a estrutura do tipo "for ... end"tic;                                % inicia um contador%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for n = 0 : N-1                     % N pontos    aux_k = 0;                        % inicia com zero      for k = 0 :  N-1              %  N pontos - somatoria_{k=0}^{N-1}                %%% gk(k) exp(-j*n*k*2*pi/N)        %%% +1 --> transforma k de variável matemática para ponteiro                aux_k  = aux_k + gk(k+1)*exp(-j*n*k*2*pi/N);              end            %%% +1 --> transforma n de variável matemática para ponteiro            Xn(n+1) = aux_k/N;              % valor final para n fixo - Fourier      endXn  = fftshift(Xn);                   % rotaciona o resultado de Fourier        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%toc;                                % estima o tempo de duração              %%% estrutura matricialtic;                                % inicia um contador%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%toc;  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  5 -  Visualização%%%%figure(2)plot(tempo,gk,'k-','linewidth',3)     % configura plot(x,y, cor azul e linha cheia)xlabel('Tempo em segundos')           % tempo em segundosylabel('Amplitude')                   % amplitude em voltstitle('Sinal g(k) amostrado')         % títulogridfigure(3)stem(frequencia,abs(Xn),'k-','linewidth',3)                % configura plot(x,y, cor azul e linha cheia)xlabel('Frequência em Hz')                 % tempo em segundosylabel('Amplitude')                        % amplitude em voltstitle('Espectro de amplitude')             % títulogrid