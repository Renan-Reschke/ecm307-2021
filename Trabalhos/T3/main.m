%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Proposta do T3 - dupla - entrega 27/05 atÃ© 24h00.%% %%  a. Para a vogal /a/ determinar a funÃ§Ã£o de laplace --> G(s) = N(s)/D(s). (2.0 pontos)%%  b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos)%%  c. Qual a relaÃ§Ã£o entre Laplace(polos) e Fourier? (1.0 ponto)%%  d. s = sigma + j w --> G(s) --> visualizar o grÃ¡fico do ponto de vista de w. %%     Comparando com Fourier qual a conslusÃ£o? (1.0 ponto)%%  e. Gerar uma vogal artificial (sintese de voz) de 2 segundos - o mais realista possÃ­vel (1.0 ponto).%%  f. Um mÃ©todo automÃ¡tico para determinar o G(s). (2,0 pontos)%%  g. Um circuito elÃ©trico equivalente a vogal. (1.0 ponto)%% %%  14/05/2021 - versÃ£o 1.0 - VCP%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - PreparaÃ§Ã£o do cÃ³digo %% %% Boas prÃ¡ticas: limpeza de variÃ¡veis; variÃ¡veis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variÃ¡veis%%% Pacotes relevantespkg load controlpkg load signal%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a - Para a vogal /a/ determinar a funÃ§Ã£o de laplace --> %%     G(s) = N(s)/D(s). (2.0 pontos) %% %%   VariÃ¡veis:  t          -  tempo de 0 a 100ms%%               Vp         -  sÃ©rie temporal referente a vogal%%               Y0         -  Fourier superior (w > 0) - 0 --> fs/2%%               frequencia -  FrequÃªncia - 0 --> fs/2%%               time0      -  variÃ¡vel auxiliar%%%%load voz.mat                        % carregar os dados para anÃ¡lise%%% Vogal no domÃ­nio do tempofigure(1);plot(t,Vp,"linewidth", 3)xlabel('tempo em segundos')ylabel('Amplitude')title('Serie temporal')grid;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a.1 Resposta de um sistema de segunda ordem %% %%  N(s) = a%%  D(s) = s^2 + bs + c%%%% https://octave.sourceforge.io/optim/function/expfit.htmlN       = 1;                                % numeradorb       = linspace(0.01,1,100);             % atenaucaoc       = linspace(0.01,1,100);             % frequencia% Plot do trecho escolhido para fazer laplaceTrecho_escolhido = Vp(231:281);Tempo_escolhido = t(231:281);figure(2);plot(Tempo_escolhido,Trecho_escolhido,"linewidth", 3)xlabel('tempo em segundos')ylabel('Amplitude')title('Serie temporal (trecho escolhido para analise)')grid;% Encontrando os melhores candidatos a b e c%[b_bckup c_bckup erro_min] = erro_minimo(b, c, Vp);              %Descomentar para ver o funcionamento%fprintf("Valores encontrados para erro minimo:\n");%fprintf("\tb = %.2f\n", b_bckup);%fprintf("\tc = %.2f\n", c_bckup);%fprintf("\tErro = %.2f\n", erro_min);%D = [1 b_bckup c_bckup];                                         % Denominador%Valores encontrados: (Comentar esse bloco e descomentar o bloco acima para verificar a deteccao automatica)b = 0.13;c = 0.12;Erro = 5.73;fprintf("a):\n");fprintf("Tempo para achar o erro minimo: Elapsed time is 98.8782 seconds.\n");fprintf("Valores encontrados para erro minimo:\n");fprintf("\tb = %.2f\n", b);fprintf("\tc = %.2f\n", c);fprintf("\tErro = %.2f\n\n", Erro);D = [1 0.13 0.12];    Gs = tf(N, D);figure(3);impulse(Gs);[serie, tempo, X] = impulse(Gs);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos) %% %%  %%%%serie = serie'; resposta_laplace = [serie serie serie serie serie serie serie serie serie serie serie serie serie serie];figure(4);plot(t,Vp,"linewidth", 3); hold;plot(t(1:714),resposta_laplace,"linewidth", 3)xlabel('tempo em segundos')ylabel('Amplitude')title('Sobreposicao de laplace sobre a vogal')legend('trecho escolhido', 'laplace')grid;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% c. Qual a relacao entre Laplace(polos) e Fourier? (1.0 ponto)%%%%%%%%  figure(7)pzmap(Gs)axis([-0.5 +0.5 -0.5 +0.5])grid%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  d. s = sigma + j w --> G(s) --> visualizar o gráfico do ponto de vista de w. %%     Comparando com Fourier qual a conclusão? (1.0 ponto)%% %% %%%%  [sigma, jw] = meshgrid(-1:0.01:1);F = 1./ (sqrt((sigma.^2-jw.^2+0.13*sigma+0.12).^2 + (2*sigma.*jw+0.13*jw).^2)+eps);figure(8)mesh(sigma, jw, F)xlabel('Sigma')ylabel('jw')zlabel('z')title('Plot 3D da Função de Transferência')gridfigure(9)plot(t, real(log10(fftshift(fft(Vp)))))grid  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% e. Gerar uma vogal artificial (sintese de voz) de 2 segundos %%    - o mais realista possÃ­vel (1.0 ponto).%% %% %%%%  vogal_artificial = [resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace resposta_laplace];tempo_artificial = linspace(0,2,7140);figure(5);plot(tempo_artificial, vogal_artificial,"linewidth", 2)xlabel('tempo (s)')ylabel('Amplitude')title('vogal artificial (metalica)')for k=1:length(vogal_artificial)  fator = 0.9 + (0.2)*rand(1);  vogal_artificial(k) = fator * vogal_artificial(k);endforfigure(6);plot(tempo_artificial, vogal_artificial,"linewidth", 2)xlabel('tempo (s)')ylabel('Amplitude')title('vogal artificial (com ruido)')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  f. Um mÃ©todo automÃ¡tico para determinar o G(s). (2,0 pontos)%% %%  %%%%  fprintf("f):\n");fprintf("Método automatico para determinar G(s) aplicado na funcao 'erro_minimo', com duracao de ~100s. Foi comentada no codigo para execucao mais rapida.\n\n");%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% g - Um circuito elÃ©trico equivalente a vogal. (1.0 ponto) %% fprintf("g):\n");fprintf("Valores encontrados para erro minimo no item a:\n");fprintf("\tb = 0.13\n", b);fprintf("\tc = 0.12\n", c);fprintf("Portanto: (G(s) = y1)\n");Gsfprintf("Do circuito em paralelo (Ig // R // C // L) tem-se:\n");fprintf("\tG(s) = (s/C)/(s^2 + s/RC + 1/LC)\n");fprintf("\t(1)  s/C = s --> C = 1F\n");fprintf("\t(2)  s/RC = 0.13s --> R ~ 7,69ohm\n");fprintf("\t(1)  1/LC = 0.12 --> L ~ 8,33H\n");